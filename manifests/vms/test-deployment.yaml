apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: test-vm
  namespace: default
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/domain: test-vm
    spec:
      domain:
        cpu:
          cores: 2
        resources:
          requests:
            memory: 2Gi
        devices:
          disks:
            - name: rootdisk
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
            - name: default
              masquerade: {}          # Pod network
      networks:
        - name: default             # Must match interface name above
          pod: {}                   # Use pod network                
      volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: test-vm-rootdisk   # must match template below
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |
              #cloud-config
              hostname: test-vm
              users:
                - name: rjouben
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh_authorized_keys:
                    - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAP+tW85n9PNJCxd9dfbwq4Afgkn8pYY+qoiaCA+7gD2"
              package_update: true
              package_upgrade: true
  volumeClaimTemplates:   # <â€” must be sibling of template
    - metadata:
        name: test-vm-rootdisk
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
        storageClassName: harvester-longhorn
        dataSource:
          kind: HarvesterImage
          name: ubuntu-24       # replace with your Harvester image name
          namespace: harvester-public
