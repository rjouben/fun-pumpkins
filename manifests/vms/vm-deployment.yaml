apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: fleet-app-vm
  namespace: default
  labels:
    app: fleet-app-vm
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/domain: fleet-app-vm
    spec:
      domain:
        cpu:
          cores: 2
          sockets: 1
          threads: 1          
        resources:
          requests:
            memory: 4Gi
        devices:
          disks:
            - name: rootdisk
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
            - bridge: {}
              model: virtio
              name: default
            - masquerade: {}
              model: virtio
              name: mgmt-nic
      networks:
        - multus:
            networkName: default/vm-network
          name: default
      volumes:
        - name: fleet-vm-disk-0
          persistentVolumeClaim:
            claimName: fleet-vm-disk-0
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |
              #cloud-config
              hostname: fleet-app-vm
              users:
                - name: rjouben
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh_authorized_keys:
                    - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAP+tW85n9PNJCxd9dfbwq4Afgkn8pYY+qoiaCA+7gD2"
              package_update: true
              package_upgrade: true
  volumeClaimTemplates:
    - metadata:
        name: fleet-vm-disk-0
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 40Gi
        storageClassName: ubuntu-24-encrypted 
        dataSource:
          kind: HarvesterImage
          name: ubuntu-24-encrypted        # Harvester Image name
          namespace: default
