apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: fleet-app-vm
  namespace: default
spec:
  runStrategy: RerunOnFailure
  template:
    spec:
      domain:
        cpu:
          cores: 2
          sockets: 1
          threads: 1
        resources:
          requests:
            memory: 4Gi
        devices:
          disks:
            - name: fleet-vm-disk-0
              disk:
                bus: virtio
              # Use containerDisk to boot from Harvester uploaded image
              # Replace <harvester-image-name> with the actual image name
              containerDisk:
                image: ubuntu-24
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
            - bridge: {}
              model: virtio
              name: vm-network
      networks:
        - multus:
            networkName: default/vm-network
          name: vm-network
      volumes:
        # - name: fleet-vm-disk-0
        #   persistentVolumeClaim:
        #     claimName: fleet-vm-disk-0   # ðŸ‘ˆ direct PVC
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |
              #cloud-config
              hostname: fleet-app-vm
              users:
                - name: rjouben
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh_authorized_keys:
                    - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAP+tW85n9PNJCxd9dfbwq4Afgkn8pYY+qoiaCA+7gD2"
              package_update: true
              package_upgrade: true
  # dataVolumeTemplates:
  #   - metadata:
  #       name: fleet-vm-disk-0
  #     spec:
  #       source:
  #         pvc:
  #           namespace: default
  #           name: app-vm-01-disk-0-tyw2n
  #       pvc:
  #         accessModes: ["ReadWriteOnce"]
  #         resources:
  #           requests:
  #             storage: 40Gi
  #         storageClassName: longhorn-image-8h9j9